(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{396:function(v,_,t){"use strict";t.r(_);var r=t(42),a=Object(r.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"服务生态系统与面向服务的计算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务生态系统与面向服务的计算"}},[v._v("#")]),v._v(" 服务生态系统与面向服务的计算")]),v._v(" "),t("h2",{attrs:{id:"服务生态系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务生态系统"}},[v._v("#")]),v._v(" 服务生态系统")]),v._v(" "),t("h3",{attrs:{id:"服务组合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务组合"}},[v._v("#")]),v._v(" 服务组合")]),v._v(" "),t("p",[v._v("顾名思义，将多个服务组合为一个服务，以完成业务任务。")]),v._v(" "),t("p",[v._v("其实就是一个组合模式。")]),v._v(" "),t("h3",{attrs:{id:"服务库存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务库存"}},[v._v("#")]),v._v(" 服务库存")]),v._v(" "),t("p",[v._v("服务库存：在组织或组织的合理边界内，一组独立标准化并治理的服务的集合。")]),v._v(" "),t("p",[v._v("在服务库存构建前，应该有一个蓝图。")]),v._v(" "),t("h4",{attrs:{id:"内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[v._v("#")]),v._v(" 内容")]),v._v(" "),t("p",[v._v("服务库存分为三层：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("应用服务层：满足开发者的需求")]),v._v(" "),t("p",[v._v("对单个功能进行抽象（如打印服务），避免重复开发，降低（其他人的）开发难度。")]),v._v(" "),t("blockquote",[t("p",[v._v("个人感觉，一般来说应用服务不会是一个流程，他应该是整个流程中的一个步骤。比如这个打印服务，就只是为了打印这一个步骤而已。")])])]),v._v(" "),t("li",[t("p",[v._v("业务服务层：满足用户的需求")]),v._v(" "),t("ul",[t("li",[v._v("任务服务：对流程进行抽象（如报道服务，包括了整个报道的全部流程）")]),v._v(" "),t("li",[v._v("实体服务：对实体进行抽象（如作业服务，提交的流程可能各不相同，但最终都是对作业这个实体进行的操作）")])]),v._v(" "),t("p",[v._v("可以用单个服务实现，也可以用服务组合实现。")])]),v._v(" "),t("li",[t("p",[v._v("编排服务层（可选）：满足业务专家的需求")]),v._v(" "),t("ul",[t("li",[v._v("可以看作是服务组合的一种实现")]),v._v(" "),t("li",[v._v("利用平台中立的语言描述服务组合，描述业务逻辑。")])]),v._v(" "),t("blockquote",[t("p",[v._v("主要是业务专家未必会写代码，他需要一些简单的方式来描述他想要的业务流程。")])])])]),v._v(" "),t("h4",{attrs:{id:"演化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#演化"}},[v._v("#")]),v._v(" 演化")]),v._v(" "),t("p",[v._v("“龙卷风模型”：随着时间推移，服务库存逐渐完善，可复用的服务逐渐增加，开发的成本逐渐降低。")]),v._v(" "),t("p",[v._v("按照蓝图逐渐扩展服务库存，优先开发可能用到的服务（按需开发），并且在开发时从库存中寻找可复用的服务。")]),v._v(" "),t("h3",{attrs:{id:"服务生态系统-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务生态系统-2"}},[v._v("#")]),v._v(" 服务生态系统")]),v._v(" "),t("p",[v._v("当组织的服务库存已经基本完备，服务系统已经"),t("strong",[v._v("合理")]),v._v("地转向面向服务的实现时，服务生态系统就完成了构建。")]),v._v(" "),t("blockquote",[t("p",[v._v("合理指的是不是所有系统都需要转向面向服务的，比如OS。")])]),v._v(" "),t("p",[v._v("包括分析、设计、实现、"),t("strong",[v._v("治理、演化")]),v._v("等过程。")]),v._v(" "),t("p",[v._v("治理：因为服务是开放的网络构件，需要面向所有其他人，如何提供足够的计算资源？")]),v._v(" "),t("p",[v._v("演化：服务的质量属性，或者干脆功能已经不能满足需求的时候，如何应对？演化过程中，接口兼容还是不兼容？")]),v._v(" "),t("h4",{attrs:{id:"水平服务和垂直服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#水平服务和垂直服务"}},[v._v("#")]),v._v(" 水平服务和垂直服务")]),v._v(" "),t("p",[v._v("这个是针对服务消费者的概念。")]),v._v(" "),t("p",[v._v("垂直服务：可以被同时、独立调用以满足消费者需求的服务。")]),v._v(" "),t("p",[v._v("水平服务：构成垂直服务的多个"),t("strong",[v._v("可重用")]),v._v("的"),t("strong",[v._v("跨领域")]),v._v("的"),t("strong",[v._v("公共服务")]),v._v("。")]),v._v(" "),t("blockquote",[t("p",[v._v("说白了就是构成垂直服务的服务组合中的那些服务。")])]),v._v(" "),t("p",[v._v("并且这两者的定义"),t("strong",[v._v("不互斥")]),v._v("，在不同的场景下，同一个服务可能既是水平服务，又是垂直服务。举例来说，如果我只是想发一封邮件，那邮件服务就是垂直服务；如果我想去报道，而发邮件是其中的一个步骤，那邮件服务其实就是水平服务。")]),v._v(" "),t("blockquote",[t("p",[v._v("水平服务、垂直服务与应用服务、业务服务、编排服务是两种不同的分类方式，没有什么必然联系。")])]),v._v(" "),t("h2",{attrs:{id:"面向服务的计算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向服务的计算"}},[v._v("#")]),v._v(" 面向服务的计算")]),v._v(" "),t("h3",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[v._v("#")]),v._v(" 定义")]),v._v(" "),t("p",[v._v("泛型角度：SOC，用服务对计算进行抽象和复用，以实现快速、低成本开发，分布式异构环境的组合")]),v._v(" "),t("p",[v._v("架构角度：SOA，使用标准接口的独立构件来进行构造")]),v._v(" "),t("p",[v._v("服务角度：在业务服务和IT服务之间建立联系（对领域的分析、设计、实现，对服务的管理）")]),v._v(" "),t("p",[v._v("软件工程角度：以服务为基本抽象单位，进行分析、设计、开发、测试、部署、维护、管理")]),v._v(" "),t("h3",{attrs:{id:"目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[v._v("#")]),v._v(" 目标")]),v._v(" "),t("h4",{attrs:{id:"技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技术"}},[v._v("#")]),v._v(" 技术")]),v._v(" "),t("ul",[t("li",[v._v("灵活性")]),v._v(" "),t("li",[v._v("可靠性")]),v._v(" "),t("li",[v._v("可扩展性")]),v._v(" "),t("li",[v._v("业务和技术的一致性（与商业一致）")]),v._v(" "),t("li",[v._v("可复用性（降低成本）")])]),v._v(" "),t("p",[v._v("以及由此带来的高生产率。")]),v._v(" "),t("h4",{attrs:{id:"商业"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#商业"}},[v._v("#")]),v._v(" 商业")]),v._v(" "),t("ul",[t("li",[v._v("供应商多元化")]),v._v(" "),t("li",[v._v("互操作性")]),v._v(" "),t("li",[v._v("组织结构的灵活性")]),v._v(" "),t("li",[v._v("商业联盟")]),v._v(" "),t("li",[v._v("可复用性（降低成本）")]),v._v(" "),t("li",[v._v("业务和技术的一致性（与技术一致）")]),v._v(" "),t("li",[v._v("ROI投资回报率的提升")])]),v._v(" "),t("h2",{attrs:{id:"面向服务和面向对象的差异"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向服务和面向对象的差异"}},[v._v("#")]),v._v(" 面向服务和面向对象的差异")]),v._v(" "),t("h3",{attrs:{id:"总体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总体"}},[v._v("#")]),v._v(" 总体")]),v._v(" "),t("p",[v._v("方法论、协作、代码复用、动态绑定、重组、通信方式、系统维护（可用性）、可靠性、软件拥有方式")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("特点")]),v._v(" "),t("th",[v._v("面向对象")]),v._v(" "),t("th",[v._v("面向服务")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("方法论")]),v._v(" "),t("td",[v._v("通过紧耦合的类进行应用开发"),t("br"),v._v("基于继承的层次式架构"),t("br"),v._v("自底向上的构造函数 - 类和模型 - 系统设计")]),v._v(" "),t("td",[v._v("通过松耦合的服务进行应用开发"),t("br"),v._v("自顶向下的系统模型 - 服务模块，服务抽象 - 服务实现"),t("br"),v._v("通过搜索获得可用的服务实现（服务发现）")])]),v._v(" "),t("tr",[t("td",[v._v("抽象和协作层次")]),v._v(" "),t("td",[v._v("一个团队负责应用开发，负责整个生命周期"),t("br"),v._v("开发者必须了解应用领域知识和编程")]),v._v(" "),t("td",[v._v("开发任务由三个独立方承担：应用程序开发者，服务提供方和服务代理"),t("br"),v._v("应用程序开发者了解应用逻辑，但不关心服务的实现"),t("br"),v._v("服务提供者需要编程能力，但不关心服务的应用"),t("br"),v._v("服务代理作为中介，实现解耦")])]),v._v(" "),t("tr",[t("td",[v._v("代码共享和复用")]),v._v(" "),t("td",[v._v("继承和库函数"),t("br"),v._v("编译时引入"),t("br"),v._v("往往是平台相关的")]),v._v(" "),t("td",[v._v("服务"),t("br"),v._v("平台无关，能够被远程调用"),t("br"),v._v("支持系统的服务共享")])]),v._v(" "),t("tr",[t("td",[v._v("动态绑定和重新组合")]),v._v(" "),t("td",[v._v("运行时将名称与方法关联"),t("br"),v._v("方法必须在应用部署前链接到可执行的代码")]),v._v(" "),t("td",[v._v("运行时将服务调用和服务进行绑定"),t("br"),v._v("可以在应用部署后进行服务选择"),t("br"),v._v("可以在运行时重组")])]),v._v(" "),t("tr",[t("td",[v._v("重组")]),v._v(" "),t("td",[v._v("在设计时决定导入的组件")]),v._v(" "),t("td",[v._v("可以动态改变服务的组合关系")])]),v._v(" "),t("tr",[t("td",[v._v("组件通讯和接口")]),v._v(" "),t("td",[v._v("与平台和语言有关")]),v._v(" "),t("td",[v._v("与平台和语言无关，组件间通过标准协议通信")])]),v._v(" "),t("tr",[t("td",[v._v("系统维护")]),v._v(" "),t("td",[v._v("用户自行升级"),t("br"),v._v("升级时应用必须停止")]),v._v(" "),t("td",[v._v("通过互联网升级"),t("br"),v._v("维护对用户透明")])]),v._v(" "),t("tr",[t("td",[v._v("可靠性")]),v._v(" "),t("td",[v._v("设计时决定")]),v._v(" "),t("td",[v._v("服务本身相对简单，本身更加可靠"),t("br"),v._v("可以进行动态的服务间切换，来确保可靠")])]),v._v(" "),t("tr",[t("td",[v._v("软件拥有")]),v._v(" "),t("td",[v._v("作为产品销售，为用户所有")]),v._v(" "),t("td",[v._v("用户每次对服务使用付费，而不是按照产品付费")])])])]),v._v(" "),t("h3",{attrs:{id:"设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[v._v("#")]),v._v(" 设计")]),v._v(" "),t("p",[v._v("耦合、粒度、作用域、前瞻性（对未来变更的预测）、状态性、组合方式")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("特点")]),v._v(" "),t("th",[v._v("面向对象")]),v._v(" "),t("th",[v._v("面向服务")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("耦合")]),v._v(" "),t("td",[v._v("提倡重用和松耦合"),t("br"),v._v("但是预先定义的类依赖导致对象紧耦合")]),v._v(" "),t("td",[v._v("松耦合"),t("br"),v._v("由功能和服务合约给定")])]),v._v(" "),t("tr",[t("td",[v._v("粒度")]),v._v(" "),t("td",[v._v("支持不同规模的任务"),t("br"),v._v("支持细粒度API")]),v._v(" "),t("td",[v._v("鼓励粗粒度API（服务描述）"),t("br"),v._v("通信消息中包括尽可能多的任务相关信息")])]),v._v(" "),t("tr",[t("td",[v._v("作用域")]),v._v(" "),t("td",[v._v("小，基于特定的软件系统")]),v._v(" "),t("td",[v._v("大，基于服务生态系统")])]),v._v(" "),t("tr",[t("td",[v._v("前瞻性")]),v._v(" "),t("td",[v._v("鼓励逻辑与数据绑定产生对象"),t("br"),v._v("逻辑修改时，对象需要修改")]),v._v(" "),t("td",[v._v("鼓励创建活动无关的、消息驱动的服务"),t("br"),v._v("功能抽象，功能不易变更")])]),v._v(" "),t("tr",[t("td",[v._v("状态性")]),v._v(" "),t("td",[v._v("数据和逻辑绑定，带状态的对象"),t("br"),v._v("相对不易预测")]),v._v(" "),t("td",[v._v("尽可能无状态的服务"),t("br"),v._v("容易预测")])]),v._v(" "),t("tr",[t("td",[v._v("组合")]),v._v(" "),t("td",[v._v("对象继承导致紧耦合")]),v._v(" "),t("td",[v._v("服务组合的松耦合")])])])]),v._v(" "),t("p",[v._v("不一而足。")]),v._v(" "),t("blockquote",[t("p",[v._v("我们有面向对象的语言，但我们永远也不会有面向服务的语言；因为服务本身是独立于语言的，从概念上就是矛盾的。\n"),t("comment")],1)])])}),[],!1,null,null,null);_.default=a.exports}}]);